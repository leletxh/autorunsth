name: Build Python Environment (Multi-Platform)

on:
  workflow_dispatch:

# üîë Êéà‰∫àÂÜôÊùÉÈôê
permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            system: linux
          - os: macos-latest
            system: macos
          - os: windows-latest
            system: windows
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Download requirements.txt
        run: |
          curl -fsSL -o requirements.txt https://raw.githubusercontent.com/xhc2008/CABM/refs/heads/main/requirements.txt

      - name: Install dependencies
        run: pip install --no-cache-dir -r requirements.txt

      - name: Package environment (Unix-like)
        if: matrix.os != 'windows-latest'
        run: |
          mkdir -p env
          SITE=$(python -c "import site; print(site.getsitepackages()[0])")
          mkdir temp_env
          cp -r "$SITE"/* temp_env/
          cd temp_env
          zip -r "../env/env-${{ matrix.system }}.zip" .
          cd ..
          rm -rf temp_env

      - name: Package environment (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          mkdir env
          $site = python -c "import site; print(site.getsitepackages()[0])"
          $tmp = "temp_env"
          New-Item -ItemType Directory -Path $tmp
          Copy-Item -Path "$site\*" -Destination $tmp -Recurse
          Compress-Archive -Path "$tmp\*" -DestinationPath "env/env-${{ matrix.system }}.zip"
          Remove-Item -Recurse -Force $tmp

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: env-${{ matrix.system }}
          path: env/env-${{ matrix.system }}.zip
          retention-days: 1

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: env

      - name: Flatten and organize
        run: |
          mkdir -p env_final
          find env -name "env-*.zip" -exec cp {} env_final/ \;
          rm -rf env
          mv env_final env

      - name: Commit and push
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add env/
          git commit -m "Update env-{linux,macos,windows}.zip with Python 3.12 dependencies"
          git push
